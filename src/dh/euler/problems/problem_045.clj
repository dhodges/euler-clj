(ns dh.euler.problems.problem_045
  (:use [dh.euler.utils]))

;; http://projecteuler.net/index.php?section=problems&id=45

;; Problem 45
;; 06 June 2003

;; Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

;; Triangle 	  	Tn = n(n+1)/2 	  	1, 3,  6, 10, 15, ...
;; Pentagonal 	  	Pn = n(3n−1)/2 	  	1, 5, 12, 22, 35, ...
;; Hexagonal 	  	Hn = n(2n−1) 	  	1, 6, 15, 28, 45, ...

;; It can be verified that T285 = P165 = H143 = 40755.

;; Find the next triangle number that is also pentagonal and hexagonal.

; Notes.
;
; http://en.wikipedia.org/wiki/Hexagonal_number


(defn natural?
  [n]
  (and (integer? n) (> n 0)))

(defn triangle?
  [x]
  (or (= (rem x 3) 0)
      (= (rem x 9) 1)))

(defn hexagonal?
  [x]
  (let [n (/ (inc (Math/sqrt (inc (* 8 x)))) 4)]
    (and (= n (int n))
         (integer? (int n)))))

(defn pentagonal?
  [x]
  (let [n (/ (inc (Math/sqrt (inc (* 24 x)))) 6)]
    (and (= n (int n))
         (natural? (int n)))))

(defn nth-triangle
  [n]
  (/ (* n (inc n)) 2))

(defn euler-45
  []
  (time
   (loop [n  286]
     (let [tn (nth-triangle n)]
       (if (and (pentagonal? tn)
                (hexagonal?  tn))
         tn
         (recur (inc n)))))))


(deftest test-euler-45
  []
  (is (= (solution) 1533776805)))

